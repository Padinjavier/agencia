; XDEBUG Extension
[xdebug]
zend_extension="c:/wamp64/bin/php/php8.1.26/zend_ext/php_xdebug-3.2.2-8.1-vs16-x86_64.dll"
;xdebug.mode allowed are : off develop coverage debug gcstats profile trace
xdebug.mode =develop, debug
xdebug.discover_client_host=1
xdebug.client_port=9003
xdebug.start_with_request=yes
xdebug.output_dir ="c:/wamp64/tmp"
xdebug.show_local_vars=0
xdebug.log="c:/wamp64/logs/xdebug.log"
;xdebug.log_level : 0 Criticals, 1 Connection, 3 Warnings, 5 Communication, 7 Information, 10 Debug	Breakpoint
xdebug.log_level=7
xdebug.profiler_output_name=trace.%H.%t.%p.cgrind
xdebug.use_compression=false

En todos los directorios DE APACHE 
Require local   ----  Require all granted



https://github.com/Carlos007007/SRCB-V2.git



const toggleTheme = () => {
    darkMode = !darkMode;
    darkMode ? addTheme(darkTheme) : addTheme(lightTheme);
    $textState.textContent = darkMode ? 'DAYMODE' : 'NIGHTMODE';
    rotateImage();
}

const addTheme = (theme) => {
    const styles = document.documentElement.style;
    const customStyles = Object.keys(theme);
    for (const style of customStyles) {
        styles.setProperty(style, theme[style]);
    }
}

const lightTheme = {
    '--color-fondo1': 'linear-gradient(180deg, #24cfd4 0%, #c22ce7 100%)',
    '--color-fondo2': 'linear-gradient(180deg, #c22ce7 0%, #24cfd4 100%)',
    '--color-light-blue': '#00B4D8',
    '--color-button': '#d86004',
    '--color-gray': '#C4C4C4',
    '--color-wite': '#ffffff',
    '--perfil1': '#a20bcf',
    '--perfil2': 'rgb(63, 91, 249)',
    '--color-info': '#ffffff',
    '--color-icon': '#000000',
    '--color-aro': '#6874e5',
    '--color-sombra': 'drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.50))',
};

const darkTheme = {
    '--color-fondo1': 'linear-gradient(180deg, #234fad 0%, #610445 100%)',
    '--color-fondo2': 'linear-gradient(180deg, #610445 0%, #234fad 100%)',
    '--color-light-blue': '#0e00d8',
    '--color-button': '#10ec98',
    '--color-gray': '#ffffff',
    '--color-wite': '#ffffff',
    '--perfil1': '#2ed9f0',
    '--perfil2': '#0cd105',
    '--color-info': '#817e7e',
    '--color-icon': '#ffffff',
    '--color-aro': '#68d9e5',
    '--color-sombra': 'drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.50))',
};

const $state = document.getElementById('aa');
const $textState = document.querySelector('.bubbly-button');
let darkMode =
    window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
$textState.textContent = darkMode ? 'DAYMODE' : 'NIGHTMODE';

$state.addEventListener('click', () => {
    toggleTheme();
});







<!-- chat -->
<!-- <section id="chat" class="" style="background-color: #fff0;">
    <div class="container py-5">
        <div class="row d-flex justify-content-center">
            <div class="col-md-8 col-lg-6 col-xl-4">
                <div class="card" id="chat1" style="border-radius: 15px;">
                    <div class="bg-primary card-header d-flex justify-content-between align-items-center p-3 text-white border-bottom-0"
                        style="border-top-left-radius: 15px; border-top-right-radius: 15px;">
                        <i class="fas fa-angle-left"></i>
                        <p class="mb-0 fw-bold">Live chat</p>
                        <i class="fas fa-times"></i>
                    </div>
                    <div class="card-body">
                        <div class="d-flex flex-row justify-content-start mb-4">
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp"
                                alt="avatar 1" style="width: 45px; height: 100%;">
                            <div class="p-3 ms-3" style="border-radius: 15px; background-color: rgba(57, 192, 237,.2);">
                                <p class="small mb-0">Hello and thank you for visiting MDBootstrap. Please click the
                                    video
                                    below.</p>
                            </div>
                        </div>

                        <div class="d-flex flex-row justify-content-end mb-4">
                            <div class="p-3 me-3 border" style="border-radius: 15px; background-color: #fbfbfb;">
                                <p class="small mb-0">Thank you, I really like your product.</p>
                            </div>
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava2-bg.webp"
                                alt="avatar 1" style="width: 45px; height: 100%;">
                        </div>

                        <div class="d-flex flex-row justify-content-start mb-4">
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp"
                                alt="avatar 1" style="width: 45px; height: 100%;">
                            <div class="ms-3" style="border-radius: 15px;">
                                <div class="bg-image">
                                    <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/screenshot1.webp"
                                        style="border-radius: 15px;" alt="video">
                                    <a href="#!">
                                        <div class="mask"></div>
                                    </a>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex flex-row justify-content-start mb-4">
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp"
                                alt="avatar 1" style="width: 45px; height: 100%;">
                            <div class="p-3 ms-3" style="border-radius: 15px; background-color: rgba(57, 192, 237,.2);">
                                <p class="small mb-0">...</p>
                            </div>
                        </div>

                        <div class="form-outline">
                            <textarea class="form-control" id="textAreaExample" rows="4"></textarea>
                            <label class="form-label" for="textAreaExample">Type your message</label>
                        </div>

                    </div>
                </div>

            </div>
        </div>

    </div>
</section> -->












<!-- <script>
  // Función para mostrar/ocultar el panel de chat y bloquear/desbloquear el scroll
  function toggleChatPanel() {
    var chatPanel = document.getElementById('chat-panel');
    if (chatPanel.style.display === 'none') {
      chatPanel.style.display = 'block';
      // Bloquear scroll
      document.body.style.overflow = 'hidden';
    } else {
      chatPanel.style.display = 'none';
      // Desbloquear scroll
      document.body.style.overflow = '';
    }
  }

  // Llama a la función cuando se hace clic en el icono de mensaje
  document.getElementById('chat-icon').addEventListener('click', toggleChatPanel);

  // Cierra el panel de chat al hacer clic en el icono de "x"
  document.querySelector('#chat-panel .fas.fa-times').addEventListener('click', function () {
    toggleChatPanel();
  });

  // Bloquear scroll en el panel de chat abierto
  document.getElementById('chat-panel').addEventListener('touchmove', function (e) {
    if (document.getElementById('chat-panel').style.display === 'block') {
      e.preventDefault();
    }
  });
  document.getElementById('chat-panel').addEventListener('wheel', function (e) {
    if (document.getElementById('chat-panel').style.display === 'block') {
      e.preventDefault();
    }
  });
</script> -->

















// let formPedido = document.querySelector("#formUpdatePedido");
// formPedido.onsubmit = function (e) {
//     e.preventDefault();
    
//     let strCodigoVenta = document.querySelector('#txtCodigoVenta').value;
//     let strCodigoSalida = document.querySelector('#txtCodigoSalida').value;
//     let dtFechaHora = document.querySelector('#fecha-hora').value;
//     let strDNI = document.querySelector('#txtDNI').value;
//     let strNombre = document.querySelector('#txtNombre').value;
//     let strApellido = document.querySelector('#txtApellido').value;
//     let strDescripcion = document.querySelector('#textareaDescripcion').value;

//     // Obtener valores de los selectores de roles dinámicos
//     let dynamicRoles = {};
//     document.querySelectorAll("select[id^='listRolEmpleado_']").forEach(select => {
//         let roleName = select.id.replace('select_', '');
//         dynamicRoles[roleName] = select.value;
//     });

//     // Imprimir valores en la consola
//     console.log("Codigo Venta:", strCodigoVenta);
//     console.log("Codigo Salida:", strCodigoSalida);
//     console.log("Fecha y Hora:", dtFechaHora);
//     console.log("DNI:", strDNI);
//     console.log("Nombre:", strNombre);
//     console.log("Apellido:", strApellido);
//     console.log("Descripcion:", strDescripcion);
//     console.log("Roles Dinámicos:", dynamicRoles);

//     // Verificar campos obligatorios
//     if (strCodigoVenta == '' || strCodigoSalida == '' || dtFechaHora == '' || strDNI == '' || strNombre == '' || strApellido == '') {
//         swal("Atención", "Todos los campos obligatorios deben ser llenados.", "error");
//         return false;
//     }

//     // Verificar roles dinámicos (si se desea que todos sean obligatorios)
//     for (let role in dynamicRoles) {
//         if (dynamicRoles[role] === '') {
//             swal("Atención", `El campo ${role} es obligatorio.`, "error");
//             return false;
//         }
//     }

//     divLoading.style.display = "flex";
//     let request = (window.XMLHttpRequest) ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');
//     let ajaxUrl = base_url + '/Pedidos/setPedido';
//     let formData = new FormData(formPedido);
//     request.open("POST", ajaxUrl, true);
//     request.send(formData);
//     request.onreadystatechange = function () {
//         if (request.readyState == 4 && request.status == 200) {
//             let objData = JSON.parse(request.responseText);
//             if (objData.status) {
//                 $('#modalFormPedido').modal("hide");
//                 formPedido.reset();
//                 swal("Pedido", objData.msg, "success");
//             } else {
//                 swal("Error", objData.msg, "error");
//             }
//         }
//         divLoading.style.display = "none";
//         return false;
//     }
// }



// NUEVO Pedido
// let formPedido = document.querySelector("#formUpdatePedido");
// formPedido.onsubmit = function (e) {
//     e.preventDefault();
    
//     let strCodigoVenta = document.querySelector('#txtCodigoVenta').value;
//     let strCodigoSalida = document.querySelector('#txtCodigoSalida').value;
//     let dtFechaHora = document.querySelector('#fecha-hora').value;
//     let strDNI = document.querySelector('#txtDNI').value;
//     let strNombre = document.querySelector('#txtNombre').value;
//     let strApellido = document.querySelector('#txtApellido').value;
//     let strDescripcion = document.querySelector('#textareaDescripcion').value;

//     // Obtener valores de los selectores de roles dinámicos
//     let dynamicRoles = {};
//     document.querySelectorAll("select[id^='listRolEmpleado_']").forEach(select => {
//         let roleName = select.id.replace('listRolEmpleado_', ''); // Ajustado aquí
//         dynamicRoles[roleName] = select.value;
//     });

//     // Imprimir valores en la consola
//     console.log("Codigo Venta:", strCodigoVenta);
//     console.log("Codigo Salida:", strCodigoSalida);
//     console.log("Fecha y Hora:", dtFechaHora);
//     console.log("DNI:", strDNI);
//     console.log("Nombre:", strNombre);
//     console.log("Apellido:", strApellido);
//     console.log("Descripcion:", strDescripcion);

//     // Imprimir roles dinámicos uno por uno
//     for (let role in dynamicRoles) {
//         console.log(`${role}: ${dynamicRoles[role]}`);
//     }

//     // Verificar campos obligatorios
//     if (strCodigoVenta == '' || strCodigoSalida == '' || dtFechaHora == '' || strDNI == '' || strNombre == '' || strApellido == '') {
//         swal("Atención", "Todos los campos obligatorios deben ser llenados.", "error");
//         return false;
//     }

//     // Verificar roles dinámicos (si se desea que todos sean obligatorios)
//     for (let role in dynamicRoles) {
//         if (dynamicRoles[role] === '') {
//             swal("Atención", `El campo ${role} es obligatorio.`, "error");
//             return false;
//         }
//     }

//     divLoading.style.display = "flex";
//     let request = (window.XMLHttpRequest) ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');
//     let ajaxUrl = base_url + '/Pedidos/setPedido';
//     let formData = new FormData(formPedido);
//     request.open("POST", ajaxUrl, true);
//     request.send(formData);
//     request.onreadystatechange = function () {
//         if (request.readyState == 4 && request.status == 200) {
//             let objData = JSON.parse(request.responseText);
//             if (objData.status) {
//                 $('#modalFormPedido').modal("hide");
//                 formPedido.reset();
//                 swal("Pedido", objData.msg, "success");
//             } else {
//                 swal("Error", objData.msg, "error");
//             }
//         }
//         divLoading.style.display = "none";
//         return false;
//     }
// }














// NUEVO Pedido
// let formPedido = document.querySelector("#formUpdatePedido");
// formPedido.onsubmit = function (e) {
//     e.preventDefault();
    
//     let strCodigoVenta = document.querySelector('#txtCodigoVenta').value;
//     let strCodigoSalida = document.querySelector('#txtCodigoSalida').value;
//     let dtFechaHora = document.querySelector('#fecha-hora').value;
//     let strDNI = document.querySelector('#txtDNI').value;
//     let strNombre = document.querySelector('#txtNombre').value;
//     let strApellido = document.querySelector('#txtApellido').value;
//     let strDescripcion = document.querySelector('#textareaDescripcion').value;

//     // Obtener valores de los selectores de roles dinámicos
//     let dynamicRoles = {};
//     document.querySelectorAll("select[id^='listRolEmpleado_']").forEach(select => {
//         let roleName = select.id.replace('listRolEmpleado_', ''); // Ajustado aquí
//         dynamicRoles[roleName] = select.value;
//     });

//     // Obtener valores de los selectores de cargadores
//     let cargadores = [];
//     document.querySelectorAll("select[name='selectCargador']").forEach(select => {
//         cargadores.push(select.value);
//     });

//     // Imprimir valores en la consola
//     console.log("Codigo Venta:", strCodigoVenta);
//     console.log("Codigo Salida:", strCodigoSalida);
//     console.log("Fecha y Hora:", dtFechaHora);
//     // console.log("Roles Dinámicos:", dynamicRoles);
//     //     // Imprimir roles dinámicos uno por uno
//     for (let role in dynamicRoles) {
//         console.log(`${role}: ${dynamicRoles[role]}`);
//     }
//     console.log("Cargadores:", cargadores);
//     console.log("DNI:", strDNI);
//     console.log("Nombre:", strNombre);
//     console.log("Apellido:", strApellido);
//     console.log("Descripcion:", strDescripcion);

//     // Verificar campos obligatorios
//     if (strCodigoVenta == '' || strCodigoSalida == '' || dtFechaHora == '' || strDNI == '' || strNombre == '' || strApellido == '') {
//         swal("Atención", "Todos los campos obligatorios deben ser llenados.", "error");
//         return false;
//     }

//     // Verificar roles dinámicos (si se desea que todos sean obligatorios)
//     for (let role in dynamicRoles) {
//         if (dynamicRoles[role] === '') {
//             swal("Atención", `El campo ${role} es obligatorio.`, "error");
//             return false;
//         }
//     }

//     // Verificar cargadores (si se desea que al menos uno sea obligatorio)
//     if (cargadores.length === 0 || cargadores.includes('')) {
//         swal("Atención", "Todos los cargadores deben ser seleccionados.", "error");
//         return false;
//     }

//     divLoading.style.display = "flex";
//     let request = (window.XMLHttpRequest) ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');
//     let ajaxUrl = base_url + '/Pedidos/setPedido';
//     let formData = new FormData(formPedido);
//     request.open("POST", ajaxUrl, true);
//     request.send(formData);
//     request.onreadystatechange = function () {
//         if (request.readyState == 4 && request.status == 200) {
//             let objData = JSON.parse(request.responseText);
//             if (objData.status) {
//                 $('#modalFormPedido').modal("hide");
//                 formPedido.reset();
//                 swal("Pedido", objData.msg, "success");
//             } else {
//                 swal("Error", objData.msg, "error");
//             }
//         }
//         divLoading.style.display = "none";
//         return false;
//     }
// }

// NUEVO Pedido
// let formPedido = document.querySelector("#formUpdatePedido");
// formPedido.onsubmit = function (e) {
//     e.preventDefault();
    
//     let strCodigoVenta = document.querySelector('#txtCodigoVenta').value;
//     let strCodigoSalida = document.querySelector('#txtCodigoSalida').value;
//     let dtFechaHora = document.querySelector('#fecha-hora').value;
//     let strDNI = document.querySelector('#txtDNI').value;
//     let strNombre = document.querySelector('#txtNombre').value;
//     let strApellido = document.querySelector('#txtApellido').value;
//     let strDescripcion = document.querySelector('#textareaDescripcion').value;

//     // Obtener valores de los selectores de roles dinámicos
//     let dynamicRoles = {};
//     document.querySelectorAll("select[id^='listRolEmpleado_']").forEach(select => {
//         let roleName = select.id.replace('listRolEmpleado_', ''); // Ajustado aquí
//         dynamicRoles[roleName] = select.value;
//     });

//     // Obtener valores de los selectores de cargadores
//     let cargadores = [];
//     document.querySelectorAll("select[name='selectCargador']").forEach(select => {
//         cargadores.push(select.value);
//     });

//     // Imprimir valores en la consola
//     console.log("Codigo Venta:", strCodigoVenta);
//     console.log("Codigo Salida:", strCodigoSalida);
//     console.log("Fecha y Hora:", dtFechaHora);

//     // Imprimir roles dinámicos uno por uno
//     for (let role in dynamicRoles) {
//         console.log(`${role}: ${dynamicRoles[role]}`);
//     }
    
//     console.log("Cargadores:", cargadores);
//     console.log("DNI:", strDNI);
//     console.log("Nombre:", strNombre);
//     console.log("Apellido:", strApellido);
//     console.log("Descripcion:", strDescripcion);

//     // Verificar campos obligatorios
//     if (strCodigoVenta === '' || strCodigoSalida === '' || dtFechaHora === '' || strDNI === '' || strNombre === '' || strApellido === '') {
//         swal("Atención", "Todos los campos obligatorios deben ser llenados.", "error");
//         return false;
//     }

//     // Verificar roles dinámicos (si se desea que todos sean obligatorios)
//     for (let role in dynamicRoles) {
//         if (dynamicRoles[role] === '') {
//             swal("Atención", `El campo ${role} es obligatorio.`, "error");
//             return false;
//         }
//     }

//     // Verificar cargadores (si se desea que al menos uno sea obligatorio)
//     if (cargadores.length === 0 || cargadores.includes('')) {
//         swal("Atención", "Todos los cargadores deben ser seleccionados.", "error");
//         return false;
//     }

//     divLoading.style.display = "flex";
//     let request = (window.XMLHttpRequest) ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');
//     let ajaxUrl = base_url + '/Pedidos/setPedido';
//     let formData = new FormData(formPedido);
//     request.open("POST", ajaxUrl, true);
//     request.send(formData);
//     request.onreadystatechange = function () {
//         if (request.readyState == 4 && request.status == 200) {
//             let objData = JSON.parse(request.responseText);
//             if (objData.status) {
//                 $('#modalFormPedido').modal("hide");
//                 formPedido.reset();
//                 swal("Pedido", objData.msg, "success");
//             } else {
//                 swal("Error", objData.msg, "error");
//             }
//         }
//         divLoading.style.display = "none";
//         return false;
//     }
// }








// NUEVO Pedido
// let formPedido = document.querySelector("#formUpdatePedido");
// formPedido.onsubmit = function (e) {
//     e.preventDefault();
    
//     let strCodigoVenta = document.querySelector('#txtCodigoVenta').value;
//     let strCodigoSalida = document.querySelector('#txtCodigoSalida').value;
//     let dtFechaHora = document.querySelector('#fecha-hora').value;
//     let strDNI = document.querySelector('#txtDNI').value;
//     let strNombre = document.querySelector('#txtNombre').value;
//     let strApellido = document.querySelector('#txtApellido').value;
//     let strDescripcion = document.querySelector('#textareaDescripcion').value;

//     // Obtener valores de los selectores de roles dinámicos
//     let dynamicRoles = {};
//     document.querySelectorAll("select[id^='listRolEmpleado_']").forEach(select => {
//         let roleName = select.id.replace('listRolEmpleado_', '');
//         if (select.value !== '') { // Ignorar si no hay selección
//             dynamicRoles[roleName] = select.value;
//         }
//     });

//     // Obtener valores de los selectores de cargadores
//     let cargadores = [];
//     document.querySelectorAll("select[name='selectCargador']").forEach(select => {
//         if (select.value !== '') { // Ignorar si no hay selección
//             cargadores.push(select.value);
//         }
//     });

//     // Obtener datos de los servicios
//     let servicios = [];
//     document.querySelectorAll("tr.detalle-venta-row").forEach(row => {
//         let selectServicio = row.querySelector("select.servicio-select");
//         let cantidad = row.querySelector("input.cantidad").value;
//         let precio = row.querySelector("input.precio").value;
//         let precioTotal = row.querySelector("input.precio_total").value;

//         if (selectServicio && selectServicio.value !== '' && cantidad !== '' && precio !== '') {
//             let nombreServicio = selectServicio.options[selectServicio.selectedIndex].text;
//             servicios.push({
//                 servicio: nombreServicio,
//                 cantidad: parseFloat(cantidad),
//                 precio: parseFloat(precio),
//                 precioTotal: parseFloat(precioTotal)
//             });
//         }
//     });

//     // Imprimir valores en la consola
//     console.log("Codigo Venta:", strCodigoVenta);
//     console.log("Codigo Salida:", strCodigoSalida);
//     console.log("Fecha y Hora:", dtFechaHora);
    
//     // Imprimir roles dinámicos uno por uno
//     for (let role in dynamicRoles) {
//         console.log(`${role}: ${dynamicRoles[role]}`);
//     }
    
//     // Imprimir cargadores solo si hay selecciones
//     if (cargadores.length > 0) {
//         console.log("Cargadores:", cargadores);
//     }
    
//     // Imprimir servicios
//     if (servicios.length > 0) {
//         console.log("Servicios:");
//         servicios.forEach(servicio => {
//             console.log(`Servicio: [${servicio.servicio}, ${servicio.cantidad}, ${servicio.precio}, ${servicio.precioTotal}]`);
//         });
//     }

//     console.log("DNI:", strDNI);
//     console.log("Nombre:", strNombre);
//     console.log("Apellido:", strApellido);
//     console.log("Descripcion:", strDescripcion);

//     // Verificar campos obligatorios
//     if (strCodigoVenta == '' || strCodigoSalida == '' || dtFechaHora == '' || strDNI == '' || strNombre == '' || strApellido == '') {
//         swal("Atención", "Todos los campos obligatorios deben ser llenados.", "error");
//         return false;
//     }

//     divLoading.style.display = "flex";
//     let request = (window.XMLHttpRequest) ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');
//     let ajaxUrl = base_url + '/Pedidos/setPedido';
//     let formData = new FormData(formPedido);
    
//     // Agregar datos dinámicos al formData
//     for (let role in dynamicRoles) {
//         formData.append(`dynamicRoles[${role}]`, dynamicRoles[role]);
//     }
//     cargadores.forEach((cargador, index) => {
//         formData.append(`cargadores[${index}]`, cargador);
//     });
//     servicios.forEach((servicio, index) => {
//         formData.append(`servicios[${index}][servicio]`, servicio.servicio);
//         formData.append(`servicios[${index}][cantidad]`, servicio.cantidad);
//         formData.append(`servicios[${index}][precio]`, servicio.precio);
//         formData.append(`servicios[${index}][precioTotal]`, servicio.precioTotal);
//     });

//     request.open("POST", ajaxUrl, true);
//     request.send(formData);
//     request.onreadystatechange = function () {
//         if (request.readyState == 4 && request.status == 200) {
//             let objData = JSON.parse(request.responseText);
//             if (objData.status) {
//                 $('#modalFormPedido').modal("hide");
//                 formPedido.reset();
//                 swal("Pedido", objData.msg, "success");
//             } else {
//                 swal("Error", objData.msg, "error");
//             }
//         }
//         divLoading.style.display = "none";
//         return false;
//     }
// }















JS Pedidos



// function fntTransaccion(idtransaccion) {
//   let request = (window.XMLHttpRequest) ?
//     new XMLHttpRequest() :
//     new ActiveXObject('Microsoft.XMLHTTP');
//   let ajaxUrl = base_url + '/Pedidos/getTransaccion/' + idtransaccion;
//   divLoading.style.display = "flex";
//   request.open("GET", ajaxUrl, true);
//   request.send();
//   request.onreadystatechange = function () {
//     if (request.readyState == 4 && request.status == 200) {
//       let objData = JSON.parse(request.responseText);
//       if (objData.status) {
//         document.querySelector("#divModal").innerHTML = objData.html;
//         $('#modalReembolso').modal('show');
//       } else {
//         swal("Errorrrrr", objData.msg, "error");
//       }
//       divLoading.style.display = "none";
//       return false;
//     }
//   }
// }

// function fntReembolsar() {
//   let idtransaccion = document.querySelector("#idtransaccion").value;
//   let observacion = document.querySelector("#txtObservacion").value;
//   if (idtransaccion == '' || observacion == '') {
//     swal("", "Complete los datos para continuar.", "error");
//     return false;
//   }

//   swal({
//     title: "Hacer Reembolso",
//     text: "¿Realmente quiere realizar el reembolso?",
//     type: "warning",
//     showCancelButton: true,
//     confirmButtonText: "Si, eliminar!",
//     cancelButtonText: "No, cancelar!",
//     closeOnConfirm: true,
//     closeOnCancel: true
//   }, function (isConfirm) {

//     if (isConfirm) {
//       $('#modalReembolso').modal('hide');
//       divLoading.style.display = "flex";
//       let request = (window.XMLHttpRequest) ?
//         new XMLHttpRequest() :
//         new ActiveXObject('Microsoft.XMLHTTP');
//       let ajaxUrl = base_url + '/Pedidos/setReembolso';
//       let formData = new FormData();
//       formData.append('idtransaccion', idtransaccion);
//       formData.append('observacion', observacion);
//       request.open("POST", ajaxUrl, true);
//       request.send(formData);
//       request.onreadystatechange = function () {
//         if (request.readyState != 4) return;
//         if (request.status == 200) {
//           let objData = JSON.parse(request.responseText);
//           if (objData.status) {
//             window.location.reload();
//           } else {
//             swal("Error", objData.msg, "error");
//           }
//           divLoading.style.display = "none";
//           return false;
//         }
//       }
//     }

//   });
// }


// function newpedidojs() {
//   let request = (window.XMLHttpRequest) ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP');
//   let ajaxUrl = base_url + '/Pedidos/newPedido/';
//   divLoading.style.display = "flex";
//   request.open("GET", ajaxUrl, true);
//   request.send();
//   request.onreadystatechange = function () {
//     if (request.readyState == 4 && request.status == 200) {
//       try {
//         console.log(request)
//         console.log(request.responseText)
//         let objData = JSON.parse(request.responseText);
//         if (objData.status) {
//           document.querySelector("#divModal").innerHTML = objData.html;
//           $('#modalFormVenta').modal('show');
//           $('select').selectpicker();
//           fntUpdateInfo();
//         } else {
//           swal("Error", objData.msg, "error");
//         }
//       } catch (e) {
//         console.error("Parsing error:", e);
//         swal("Error", "Error al procesar la respuesta del servidor", "error");
//       }
//       divLoading.style.display = "none";
//     }
//   }
// }


// function fntUpdateInfo() {
//   let formUpdateVenta = document.querySelector("#formUpdateVenta");
//   formUpdateVenta.onsubmit = function (e) {
//     e.preventDefault();
//     let transaccion;
//     if (document.querySelector("#txtTransaccion")) {
//       transaccion = document.querySelector("#txtTransaccion").value;
//       if (transaccion == "") {
//         swal("", "Complete los datos para continuar.", "error");
//         return false;
//       }
//     }

//     let request = (window.XMLHttpRequest) ?
//       new XMLHttpRequest() :
//       new ActiveXObject('Microsoft.XMLHTTP');
//     let ajaxUrl = base_url + '/Pedidos/setPedido/';
//     divLoading.style.display = "flex";
//     let formData = new FormData(formUpdateVenta);
//     request.open("POST", ajaxUrl, true);
//     request.send(formData);
//     request.onreadystatechange = function () {
//       if (request.readyState != 4) return;
//       if (request.status == 200) {
//         let objData = JSON.parse(request.responseText);
//         if (objData.status) {
//           swal("", objData.msg, "success");
//           $('#modalFormVenta').modal('hide');
//           if (document.querySelector("#txtTransaccion")) {
//             rowTable.cells[1].textContent = document.querySelector("#txtTransaccion").value;
//             rowTable.cells[4].textContent = document.querySelector("#listTipopago").selectedOptions[0].innerText;
//             rowTable.cells[5].textContent = document.querySelector("#listEstado").value;
//           } else {
//             rowTable.cells[5].textContent = document.querySelector("#listEstado").value;
//           }
//         } else {
//           swal("Error", objData.msg, "error");
//         }

//         divLoading.style.display = "none";
//         return false;
//       }
//     }

//   }
// }